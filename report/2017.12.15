1.在学习python的过程中学到一个有趣的函数yield，也被称为生成器，简单点理解生成器就是一个迭代器，在调用生成器运行的过程中，每次遇到yield时函数会暂停
  当前函数且保存所有的运行信息，然后返回yield的值，当下一次执行 next()方法时则从被暂停处继续运行。该函数可用于获取动态生成的序列的元素，而不用等待
  该序列全部生成后再获取，可以节省内存空间，但不知道使用yield函数的代价是什么
2.为了之后网络安全的大作业，给一个IPphone程序（之前用java写过）进行身份认证和通信加密，试着用python写了一个简单的聊天程序，由于还没学到python的多线程部分，
  所以只能进行你一句我一句的简单的聊天
3.在python中的class中，self的作用类似于Java类中的this
